/*–ö–∞—Ä—Ç–º–µ–π—Å—Ç–µ—Ä –ß–∞—Ä–ª—ñ –ö–∞—Ä–¥–º–µ–Ω –º–∞—î —Å–ø–µ—Ü—ñ–∞–ª—å–Ω—ñ –∫–æ–ª–æ–¥–∏ –∫–∞—Ä—Ç, —É —è–∫–∏—Ö –º–æ–∂–µ –±—É—Ç–∏ –¥–æ 1000000
–∫–∞—Ä—Ç. –í—ñ–Ω ‚Äì ‚Äû–≥—ñ–≥–∞–Ω—Ç –¥—É–º–∫–∏‚Äù, —Ç–æ–º—É –∑–º—ñ–≥ —Ä–æ–∑—Ä–æ–±–∏—Ç–∏ –±–∞–≥–∞—Ç–æ –≤–ª–∞—Å–Ω–∏—Ö —ñ–≥–æ—Ä —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–æ –¥–ª—è —Ç–∞–∫–∏—Ö
–∫–æ–ª–æ–¥. –û–¥–Ω–æ–≥–æ —Ä–∞–∑—É –ß–∞—Ä–ª—ñ –∑–∞–ø—Ä–æ—Å–∏–≤ –¥–æ —Å–µ–±–µ —É –≥–æ—Å—Ç—ñ –¥—Ä—É–∑—ñ–≤ —ñ –≤–∏—Ä—ñ—à–∏–≤ –ø–æ–≥—Ä–∞—Ç–∏ –∑ –Ω–∏–º–∏ —É
–Ω–æ–≤—É —â–æ–π–Ω–æ –ø—Ä–∏–¥—É–º–∞–Ω—É –≥—Ä—É. –î–ª—è –Ω–µ—ó –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏–π –±—É–≤ –Ω–∞–±—ñ—Ä –∫–∞—Ä—Ç –∑ ùêæ1,ùêæ2,ùêæ3, ‚Ä¶ ,ùêæùëÅ. –ü—Ä–∏
—Å–æ–±—ñ –ß–∞—Ä–ª—ñ –º–∞–≤ –∫–æ–ª–æ–¥—É –∑ –∫–∞—Ä—Ç–∞–º–∏ ùëá1, ùëá2, ùëá3, ‚Ä¶ , ùëáùëÄ. –ô–æ–º—É –± —Ö–æ—Ç—ñ–ª–æ—Å—è –¥—ñ–∑–Ω–∞—Ç–∏—Å—è, —á–∏ –º–æ–∂–µ –≤—ñ–Ω
–≥—Ä–∞—Ç–∏ —É –≥—Ä—É —Ü—ñ—î—é –∫–æ–ª–æ–¥–æ—é. –ß–∞—Ä–ª—ñ –Ω–µ –¥—Ä—É–∫—É—î –≤–ª–∞—Å–Ω—ñ –∫–∞—Ä—Ç–∏, —Ç–æ–º—É —Ä—ñ–∑–Ω–∏—Ö –∫–∞—Ä—Ç —É –∫–æ–ª–æ–¥—ñ –Ω–µ
–±—ñ–ª—å—à–µ 56.test*/

#include <iostream>
using namespace std;

void cnt_mas(int mas[], int N) 
{
    int num;
    for (int i = 1; i <= N; i++) 
    {
        cin >> num;
        mas[num]++;
    }
}

void out_mas(int mas[], int N) {
    for (int i = 1; i <= N; i++) {
        cout << mas[i] << " ";
    }
    cout << '\n';
}

bool can_play(int mas1[], int mas2[])
{
    for (int i = 1; i <= 56; i++)
    {
        if (mas1[i] < mas2[i])
            return false; 
    }
    return true;
}

int cnt_need_mas[150]={0};
int cnt_have_mas[150]={0};
int main() 
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);

    int N_need, N_have;

    cin >> N_need;
    cnt_mas(cnt_need_mas, N_need);

    cin >> N_have;
    cnt_mas(cnt_have_mas, N_have);

    if (can_play(cnt_have_mas, cnt_need_mas))
        cout << "Yes";
    else
       cout << "No";
       
    //out_mas(cnt_need_mas, N_need);
    //out_mas(cnt_have_mas, N_have);
    return 0;
}

